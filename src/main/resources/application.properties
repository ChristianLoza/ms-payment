

## Database configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/db-payment
quarkus.hibernate-orm.database.generation=update

#CORSquarkus.http.cors=true
#quarkus.http.cors.access-control-allow-credentials=true
#quarkus.http.cors.origins=*
#quarkus.http.cors.methods=GET,POST,PUT,DELETE,HEAD
#quarkus.http.cors.headers=origin, content-type, accept, authorization

quarkus.http.port=8087
quarkus.swagger-ui.always-include=true

## Enable Swagger UI
## Kafka config
kafka.bootstrap.servers=http://localhost:9093

mp.messaging.incoming.uniandes-proof.connector=smallrye-kafka
mp.messaging.incoming.uniandes-proof.topic=TOPIC_PROOF_GENERATE
mp.messaging.incoming.uniandes-proof.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.post-payment.connector=smallrye-kafka
mp.messaging.incoming.post-payment.topic=TOPIC_POSTPAYMENT
mp.messaging.incoming.post-payment.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer



## RestClient
quarkus.rest-client.service-api.url=http://localhost:8094/api/v2/orders/
quarkus.rest-client.service-api.scope=jakarta.inject.Singleton
quarkus.rest-client.service-api.verify-host=false





